;; general language-related tests

;; --- case insensitivity ---

(define x 1)
X
=> 1
(define X 1)
x
=> 1

;; --- strings ---

"xyz"
=> "xyz"
"abc\ndef"
=> "abc\ndef"
"♪~~"
=> "♪~~"

;; --- rest/keyword arguments

(define show-rest
  (lambda (a b) %rest))
(show-rest 1 2 3 4)
=> (3 4)

(define f
  (lambda (a b) 
    (list %rest (dict-get %keywords 'foo 44) (dict-get %keywords 'bar 55))))
(f 1 2 :foo 5 7)
=> ((7) 5 55)

;; only keyword literals will be considered as keyword arguments. expressions
;; that evaluate to keywords will be keyword objects, and are regular arguments!
(list ':x ':y ':z)
=> (:x :y :z)
(define kw :x)  ;; works ok with define since it doesn't process kwargs
(list kw)
=> (:x)
(type-name (type ':x))
=> keyword

