;; vectors.test

(make-vector 3)
=> #(false false false)
(make-vector 3 0)
=> #(0 0 0)

(list->vector '(1 2 3))
=> #(1 2 3)

(vector->list (list->vector '(2 3 4)))
=> (2 3 4)
;; TODO: test with mutable objects; do we still refer to the same object?
;; (we should)

(define v (list->vector '(a b c)))
(vector-get v 0)
=> a
(define v (list->vector '(a b c)))
(vector-get v 2)
=> c
(define v (list->vector ()))
(vector-get v 0 'default)
=> default

(define v (list->vector '(a b c)))
(vector-set! v 1 'd)
=> #(a d c)

(define v1 (list->vector '(1 2 3)))
(define v2 (make-vector 3 v1))
v2
=> #(#(1 2 3) #(1 2 3) #(1 2 3))

(define v1 (list->vector '(1 2 3)))
(define v2 (make-vector 3 v1))
(vector-set! v1 2 4)
v2
=> #(#(1 2 4) #(1 2 4) #(1 2 4))

